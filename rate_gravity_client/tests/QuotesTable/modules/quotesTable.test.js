import quotesTableReducer, {
  FETCH_QUOTE,
  FETCH_QUOTE_RECIEVED,
  FETCH_QUOTE_ERROR,
} from '../../../src/QuotesTable/module/quotesTable';

const quoteRates = [
  {
    "lenderName": "TFB Federal Credit Union",
    "loanType": "7/1 ARM",
    "interestRate": 4,
    "closingCosts": 5250,
    "monthlyPayment": 1909.6611818618114,
    "apr": 4.108324044675101
  },
  {
    "lenderName": "Tres Graduado Mortgage",
    "loanType": "15YR Fixed",
    "interestRate": 3.75,
    "closingCosts": 6000,
    "monthlyPayment": 1852.4623662884978,
    "apr": 3.871944458123837
  },
  {
    "lenderName": "Tres Graduado Mortgage",
    "loanType": "20YR Fixed",
    "interestRate": 3.875,
    "closingCosts": 6000,
    "monthlyPayment": 1880.9483354653669,
    "apr": 3.997837623066516
  },
]

const defaultState = { loading: false, table: [] };

test('Test QuotesTable reducer generated by action', () => {
  // Default state
  expect(quotesTableReducer(defaultState, {})).toEqual(defaultState);

  // Action base state
  let action = { type: FETCH_QUOTE };
  let expectState = { ...defaultState, loading: true };
  expect(quotesTableReducer(defaultState, action)).toEqual(expectState);

  action = { type: FETCH_QUOTE_RECIEVED, loading: false, payload: { data: quoteRates } }
  let fetchedQuotesState = quotesTableReducer(expectState, action);
  expectState.table = quoteRates;
  expectState.loading =  false;
  expect(fetchedQuotesState).toEqual(expectState)

  action = { type: FETCH_QUOTE_ERROR, loading: false };
  const errorState = quotesTableReducer(fetchedQuotesState, action);
  expectState.loading = false;
  expect(errorState).toEqual(expectState)
});